<?php

namespace App;

use App\Mail\NewUserWelcomeMail;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Illuminate\Support\Facades\Mail;

class User extends Authenticatable
{
    use Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name', 'email', 'username', 'password',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    /**
     * When new user created automatically dummy profile will be created also
     * boot => user created and a mail was sent to user email id
     */
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::created(function ($user) {
            $user->profile()->create([
                'title' => ''
            ]);
            Mail::to($user->email)->send(new NewUserWelcomeMail());
        });
    }

    /**
     * An user can have many posts
     * Post model => user() => $this->belongsTo(User::class);
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function posts()
    {
        return $this->hasMany(Post::class)->orderBy('created_at','DESC');
    }

    /**
     * An user can have only one profile
     * Profile model => user() => $this->belongsTo(User::class);
     * @return \Illuminate\Database\Eloquent\Relations\HasOne
     */
    public function profile()
    {
        return $this->hasOne(Profile::class);
    }

    /**
     * A user can be following many users for that  this user belongs to many profile
     * on pivot table , call this user unsingned big interger id => $table->unsignedBigInteger('user_id');
     * @return \Illuminate\Database\Eloquent\Relations\BelongsToMany
     */
    public function following()
    {
        return $this->belongsToMany(Profile::class);
    }
}
